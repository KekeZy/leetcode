问题描述：Merge two sorted linked lists and return it as a new list. 
        The new list should be made by splicing together the nodes of the first two lists.
examoles：Input: 1->2->4, 1->3->4
          Output: 1->1->2->3->4->4
          
public class Solution(){
      public class listNode(){
           int val;
           listNode next;
           ListNode(int x) { val = x; }
      }
      public listNode MergeTwoLists(listNode l1,listNode l2){
            if(l1==null) return l2;
            if(l2==null) return l1;
            if(l1.val<l2.val){
                l1.next = MergeTwoLists(l1.next,l2);    //递归思想
                return l1;
            } 
            else{
                l2.next = MergeTwoLists(l1,l2.next);
                return l2;
            } 
      }         
}
 
public class Solution {  
    public ListNode Merge(ListNode list1,ListNode list2) {
        if(list1 == null) return list2;
        if(list2 == null) return list1;
        ListNode merge = null;
        ListNode cur = null;
        while(list1!=null && list2!=null){
            if(list1.val<=list2.val){
                if(merge==null){
                    merge = cur = list1;
                }else{
                    cur.next = list1;
                    cur = cur.next;
                }
                list1 = list1.next;
            }else{
                 if(merge==null){
                    merge = cur = list2;
                }else{
                    cur.next = list2;
                    cur = cur.next;
                }
                list2 = list2.next;
            }
        }
        if(list1!=null){
            cur.next = list1;
        }else{
            cur.next = list2;
        }
        return merge;
    }
}
