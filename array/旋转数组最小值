把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非递减排序的数组的一个旋转，输出旋转数组的最小元素。 
例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

容易想到的就是遍历数组。
第二种方法就是二分查找，时间复杂度会降低。数组非递减排序，旋转之后相当于数组分为两部分，每部分都是非递减，最小值就是两部分的分界点。

import java.util.ArrayList;
public class Solution {
    public int minNumberInRotateArray(int [] array) {
        if(array.length==0){
            return 0;
        }
        int left = 0;
        int right = array.length-1;
        int mid = -1;
        while(array[left]>=array[right]){
            if(right-left==1){  //只有2个数的情况？？
                mid = right;
                break;
            }
            mid = left + (right-left)/2;
            if(array[mid]>=array[left]){
                left = mid;
            }
            if(array[mid]<=array[right]){
                right = mid;
            }
        }
        return array[mid];
    }
}
