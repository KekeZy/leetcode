Input:
 1---2---3---4---5---6--NULL
         |
         7---8---9---10--NULL
             |
             11--12--NULL

Output:
1-2-3-7-8-11-12-9-10-4-5-6-NULL
把层次链表铺平
"""
# Definition for a Node.
class Node(object):
    def __init__(self, val, prev, next, child):
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child
"""

1、迭代
class Solution(object):
    def flatten(self, head):
        if head == None:
            return head
        p = head
        while p != None:
            if p.child != None:
                n = p.next
                p.next = p.child
                p.child.prev = p
                p.child = None
                t = p.next  #类似递归，把之后的层次链表展开
                while t.next != None:
                    t = t.next
                t.next = n
                if n != None:  # n不是尾结点
                    n.prev = t
            p = p.next
        return head
 
