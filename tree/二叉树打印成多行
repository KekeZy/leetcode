从上到下按层打印二叉树，同一层结点从左至右输出。每一层输出一行

import java.util.ArrayList;
import java.util.Queue;
import java.util.LinkedList;

public class Solution {
    ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
         ArrayList<ArrayList<Integer> > res = new  ArrayList<ArrayList<Integer> >();
        if(pRoot ==null) return res;
        Queue<TreeNode> que = new LinkedList();  //双向链表
        que.add(pRoot);
        int start =0,end = 1;   //记录每一行的结点个数
        ArrayList<Integer> list = new ArrayList<Integer>();  //第一层要用到的list
        while(!que.isEmpty()){          
            TreeNode p = que.remove();   //移出头节点
            list.add(p.val);
            start++;
            if(p.left != null){
                que.add(p.left);
            }
            if(p.right != null){
                que.add(p.right);
            }
            if(start==end){     //一层遍历完以后
                end = que.size();
                start = 0;
                res.add(list);
                list = new ArrayList<Integer>();
            }
        }
        return res;
    }
    
}
