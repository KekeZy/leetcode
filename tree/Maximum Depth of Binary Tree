求二叉树的最大深度

//递归方法
class Solution {
    public int maxDepth(TreeNode root) {
        if(root==null){
            return 0;
        }
        return 1+Math.max(maxDepth(root.left),maxDepth(root.right));
    }
}

//非递归
    public int MaxDepth(TreeNode root) {
        TreeNode node = root;
        Stack<TreeNode> nodeStack = new Stack<TreeNode>();
        Stack<int> depthStack = new Stack<int>();
        
        int max = 0;
        int depth = 1;
        while (node != null || nodeStack.Count > 0)
        {
            if (node != null)
            {
                nodeStack.push(node);
                depthStack.push(depth);
                node = node.left;
                depth++;
            }
            else
            {
                node = nodeStack.pop();
                depth = depthStack.pop();
                
                if (depth > max) max = depth;
                
                node = node.right;
                depth++;
            }
        }
        
        return max;
    }
