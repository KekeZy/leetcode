按照之字形打印二叉树，即第一行按照从左到右的顺序打印，第二层按照从右至左的顺序打印，第三行按照从左到右的顺序打印，其他行以此类推。

import java.util.ArrayList;
import java.util.Stack;



public class Solution {
    public ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
        int layer = 1;
        ArrayList<ArrayList<Integer>> res = new ArrayList<ArrayList<Integer>>();
        if(pRoot == null) return res;
        Stack<TreeNode> s1 = new Stack();   //两个栈，s1存放奇数层，s2存偶数层
        Stack<TreeNode> s2 = new Stack();
        s1.push(pRoot);
       
        while(!s1.empty() || !s2.empty()){
            if(layer %2 !=0){
                ArrayList<Integer> list = new ArrayList<Integer>();
                while(!s1.empty()){
                    TreeNode node = s1.pop();
                    if(node!=null){
                      list.add(node.val);
                      s2.push(node.left);
                      s2.push(node.right);  
                    }
                }
                if(!list.isEmpty()){
                     layer++;
                res.add(list);
                }
               
            }else{
                ArrayList<Integer> list = new ArrayList<Integer>();
                while(!s2.empty()){
                    TreeNode node = s2.pop();
                    if(node!=null){
                        list.add(node.val);
                        s1.push(node.right);
                        s1.push(node.left);
                    }
                }
                if(!list.isEmpty()){
                    layer++;
                res.add(list);
                }
                
            }
        }
        return res;
    }

}
