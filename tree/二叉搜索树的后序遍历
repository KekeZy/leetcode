判断序列是否为一个二叉搜索树的后序遍历

数组的末位是二叉树的根节点
去掉根节点后，数组可分为左子树和右子树
确定右子树的位置，判断右子树是否都大于根结点
左右子树再分别递归


public class Solution {
    public boolean VerifySquenceOfBST(int [] sequence) {
        if(sequence.length==0){
            return false;
        }
        return help(sequence,0,sequence.length-1);
    }
    public boolean help(int [] a,int start,int end){
        if(start>=end){
            return true;
        }
        int i = start;
        while(a[i]<a[end] && i<end) i++;  //确定右子树坐标
        for(;i<end;i++){
            if(a[i]<a[end]) return false;
        }
        return help(a,start,i-1) && help(a,i,end);
    }
}

